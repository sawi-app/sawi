generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id       String  @id
  refer_to String
  street   String?
  street2  String?
  city     String?
  state    String?
  zip_code String?
  country  String?
  lat      String?
  lng      String?
}


model Organisation {
  id                 String  @id
  reference          String
  name               String?
  logo               String?
  commercial_register String?
  tax_id_number      String?
  customs_code       String?
  tel                String[] 
  establishments Establishment[]
  deposits    Deposit[]
  locations    Location[]
  contactTypes  ContactType[]
  banks        Bank[]
  bankAccounts  BankAccount[]
  taxes         Tax[]
}

model Establishment {
  id           String   @id
  id_org       String   @map("id_org") 
  referencee   String   @unique
  designation  String?
  currency     String?
  organisation Organisation @relation(fields: [id_org], references: [id])
  deposits     Deposit[]
  locations    Location[]
  contactTypes ContactType[]
  bankAccounts  BankAccount[]
  taxes         Tax[]
}

model Deposit {
  id           String      @id
  id_org       String      @map("id_org") 
  id_etb       String      @map("id_etb") 
  reference    String      @unique
  designation  String?
  type         String

  organisation Organisation @relation(fields: [id_org], references: [id])
  establishment Establishment @relation(fields: [id_etb], references: [id])

  locations    Location[]
}

model Location {
  id           String      @id
  id_org       String      @map("id_org")
  id_etb       String      @map("id_etb") 
  id_depo      String      @map("id_depo") 
  reference    String      @unique
  designation  String?
  volume       String?
  organisation Organisation @relation(fields: [id_org], references: [id])
  establishment Establishment @relation(fields: [id_etb], references: [id])
  deposit      Deposit     @relation(fields: [id_depo], references: [id])
}

model ContactType {
  id           String      @id
  id_org       String      @map("id_org")
  id_etb       String      @map("id_etb") 
  reference    String      @unique
  designation  String?
  organisation Organisation @relation(fields: [id_org], references: [id])
  establishment Establishment @relation(fields: [id_etb], references: [id])
}

model Bank {
  id           String      @id
  id_org       String      @map("id_org") 
  reference    String      @unique
  designation  String?
  organisation Organisation @relation(fields: [id_org], references: [id])
  bankAccounts  BankAccount[]
}

model BankAccount {
  id           String      @id
  id_org       String      @map("id_org")
  id_etb       String      @map("id_etb") 
  id_bank      String      @map("id_bank")
  reference    String      @unique
  RIB          String
  organisation Organisation @relation(fields: [id_org], references: [id])
  establishment Establishment @relation(fields: [id_etb], references: [id])
  bank         Bank         @relation(fields: [id_bank], references: [id])
}

model Tax {
  id           String      @id
  id_org       String      @map("id_org")
  id_etb       String      @map("id_etb")
  reference    String      @unique
  designation  String?
  value        Float?
  tax_type     String?
  organisation Organisation @relation(fields: [id_org], references: [id])
  establishment Establishment @relation(fields: [id_etb], references: [id])
}